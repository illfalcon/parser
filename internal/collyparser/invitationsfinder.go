package collyparser

import "strings"

//type dateFinder struct {
//}
//
//func (m dateFinder) Match(node *html.Node) bool {
//	return node.Type == html.TextNode && containsMonth(node.Data)
//}
//
//func (m dateFinder) MatchAll(*html.Node) []*html.Node {
//
//}
//
//func (m dateFinder) Filter([]*html.Node) []*html.Node {
//
//}

var months = []string{
	" январь", " января", " февраль", " февраля", " март", " марта", " апрель", " апреля", " май", " мая",
	" июнь", " июня", " июль", " июля", " август", " августа", " сентябрь", " сентября", " октябрь", " октября",
	" ноябрь", " ноября", " декабрь", " декабря",
}

var invitations = []string{
	"встреча", "тренинг", "семинар", "стажировка", "фестиваль", "форум", "конференция", "вебинар", "мастер-класс",
	"хакатон", "конкурс", "забег", "акселератор", "инкубатор", "концерт", "школа", "супервизия", "презентация", "консультация",
	"концерт", "аукцион", "организует", "открыт набор", "подать заявку", "зарегистрироваться",
	"познакомиться", "обменяться опытом", "узнать о", "получить информацию о",
	"Встреча", "Тренинг", "Семинар", "Стажировка", "Фестиваль", "Форум", "Конференция", "Вебинар", "Мастер-класс",
	"Хакатон", "Конкурс", "Забег", "Акселератор", "Инкубатор", "Концерт", "Школа", "Супервизия", "Презентация", "Консультация",
	"Концерт", "Аукцион", "Организует", "Открыт набор", "Подать заявку", "Зарегистрироваться",
	"Познакомиться", "Обменяться опытом", "Узнать о ", "Получить информацию о ",
	"Приглашаем", "приглашаем", "Состоится", "состоится", "пройдет", "Пройдет", "пройдёт", "Пройдёт", "открывается",
	"Открывается", "откроется", "откроется", "проводим", "Проводим", "Проведем", "проведем", "Проведём", "проведём",
	"приглашаются", "Приглашаются", "проведет", "проведёт", "Проведет", "Проведёт",
}

func containsInvitation(text string) bool {
	for _, inv := range invitations {
		if strings.Contains(text, inv) {
			return true
		}
	}
	return false
}
